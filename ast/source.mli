(* Copyright (c) 2016-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree. *)

type mode =
  | Default
  | DefaultButDontCheck of int list
  | Declare
  | Strict
  | Unsafe
  | Infer
  | PlaceholderStub
[@@deriving compare, eq, show, sexp, hash]

module Metadata : sig
  type t = {
    autogenerated: bool;
    debug: bool;
    local_mode: mode;
    ignore_lines: Ignore.t list;
    version: int;
    number_of_lines: int;
    raw_hash: int;
  }
  [@@deriving compare, eq, show, hash, sexp]

  val create_for_testing
    :  ?autogenerated:bool ->
    ?debug:bool ->
    ?local_mode:mode ->
    ?ignore_lines:Ignore.t list ->
    ?version:int ->
    ?raw_hash:int ->
    ?number_of_lines:int ->
    unit ->
    t

  val parse : qualifier:Reference.t -> string list -> t
end

type t = {
  docstring: string option;
  metadata: Metadata.t;
  relative: string;
  is_external: bool;
  is_stub: bool;
  is_init: bool;
  qualifier: Reference.t;
  statements: Statement.t list;
}
[@@deriving compare, eq, hash, show, sexp]

val mode : configuration:Configuration.Analysis.t -> local_mode:mode option -> mode

val create_from_source_path
  :  docstring:string option ->
  metadata:Metadata.t ->
  source_path:SourcePath.t ->
  Statement.t list ->
  t

val create
  :  ?docstring:string option ->
  ?metadata:Metadata.t ->
  ?relative:string ->
  ?is_external:bool ->
  Statement.t list ->
  t

val ignore_lines : t -> Ignore.t list

val statements : t -> Statement.t list

val top_level_define : t -> Statement.Define.t

val top_level_define_node : t -> Statement.Define.t Node.t

val wildcard_exports_of : t -> Reference.t list

val expand_relative_import : from:Reference.t -> t -> Reference.t

val localize_configuration : source:t -> Configuration.Analysis.t -> Configuration.Analysis.t
