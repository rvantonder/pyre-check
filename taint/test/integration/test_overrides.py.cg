Call dependencies
qualifier.A::__init__ (method) -> [qualifier.Base::__init__ (method)]
qualifier.A::methodA (method) -> [__testSink (fun)]
qualifier.B::__init__ (method) -> [qualifier.Base::__init__ (method)]
qualifier.B::classMethod (method) -> [__testSink (fun)]
qualifier.B::methodB (method) -> [__testSource (fun)]
qualifier.Base::__init__ (method) -> []
qualifier.Base::classMethod (method) -> []
qualifier.Base::methodA (method) -> []
qualifier.Base::methodB (method) -> []
qualifier.C::__init__ (method) -> [qualifier.B::__init__ (method)]
qualifier.C::classMethod (method) -> []
qualifier.C::methodA (method) -> []
qualifier.D::__init__ (method) -> [qualifier.C::__init__ (method)]
qualifier.D::methodA (method) -> [__testSink (fun)]
qualifier.D::methodB (method) -> [__testSource (fun)]
qualifier.testA (fun) -> [qualifier.A::methodA (method) qualifier.Base::classMethod (method) qualifier.Base::methodB (method)]
qualifier.testB (fun) -> [qualifier.B::classMethod (override) qualifier.B::methodB (override) qualifier.C::methodA (override)]
qualifier.testBase (fun) -> [qualifier.Base::classMethod (override) qualifier.Base::methodA (override) qualifier.Base::methodB (override)]
qualifier.testC (fun) -> [qualifier.C::classMethod (method) qualifier.C::methodA (override) qualifier.D::methodB (method)]
qualifier.testD (fun) -> [qualifier.C::classMethod (method) qualifier.D::methodA (method) qualifier.D::methodB (method)]
qualifier.testMakeA (fun) -> [qualifier.A::__init__ (method) qualifier.Base::methodB (method)]
qualifier.testMakeB (fun) -> [qualifier.B::__init__ (method) qualifier.B::methodB (override)]
qualifier.testMakeBase (fun) -> [qualifier.Base::__init__ (method) qualifier.Base::methodB (override)]
qualifier.testMakeC (fun) -> [qualifier.C::__init__ (method) qualifier.D::methodB (method)]
qualifier.testMakeD (fun) -> [qualifier.D::__init__ (method) qualifier.D::methodB (method)]
qualifier.testStaticA (fun) -> [qualifier.Base::classMethod (method) qualifier.Base::methodB (method)]
qualifier.testStaticB (fun) -> [qualifier.B::classMethod (method) qualifier.B::methodB (override)]
qualifier.testStaticBase (fun) -> [qualifier.Base::classMethod (method) qualifier.Base::methodB (override)]
qualifier.testStaticC (fun) -> [qualifier.C::classMethod (method) qualifier.D::methodB (method)]
qualifier.testStaticD (fun) -> [qualifier.C::classMethod (method) qualifier.D::methodB (method)]
