{
  "kind": "issue",
  "data": {
    "callable": "qualifier.match_flows",
    "callable_line": 12,
    "code": 5002,
    "line": 14,
    "start": 15,
    "end": 16,
    "filename": "test_port.py",
    "message":
      "Test flow. Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "test_port.py",
                "line": 13,
                "start": 20,
                "end": 22
              },
              "resolves_to": [ "qualifier.source_field" ],
              "port": "result[a]",
              "length": 1
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSource" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "test_port.py",
                "line": 14,
                "start": 15,
                "end": 16
              },
              "resolves_to": [ "qualifier.sink_field" ],
              "port": "formal(arg)[a]",
              "length": 1
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "qualifier.match_star_arg_directly",
    "callable_line": 26,
    "code": 5002,
    "line": 27,
    "start": 31,
    "end": 43,
    "filename": "test_port.py",
    "message":
      "Test flow. Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "test_port.py",
                "line": 27,
                "start": 43,
                "end": 45
              },
              "resolves_to": [ "qualifier.source_field" ],
              "port": "result[a]",
              "length": 1
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSource" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "test_port.py",
                "line": 27,
                "start": 31,
                "end": 43
              },
              "resolves_to": [ "qualifier.star_arg_wrapper" ],
              "port": "formal(*rest1)[1][a]",
              "length": 3
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "qualifier.match_star_arg_with_star",
    "callable_line": 22,
    "code": 5002,
    "line": 24,
    "start": 26,
    "end": 31,
    "filename": "test_port.py",
    "message":
      "Test flow. Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "test_port.py",
                "line": 23,
                "start": 27,
                "end": 29
              },
              "resolves_to": [ "qualifier.source_field" ],
              "port": "result[a]",
              "length": 1
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSource" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "test_port.py",
                "line": 24,
                "start": 26,
                "end": 31
              },
              "resolves_to": [ "qualifier.star_arg_wrapper" ],
              "port": "formal(*rest1)[1][a]",
              "length": 3
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "qualifier.match_star_star_arg_directly",
    "callable_line": 42,
    "code": 5002,
    "line": 43,
    "start": 40,
    "end": 52,
    "filename": "test_port.py",
    "message":
      "Test flow. Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "test_port.py",
                "line": 43,
                "start": 52,
                "end": 54
              },
              "resolves_to": [ "qualifier.source_field" ],
              "port": "result[a]",
              "length": 1
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSource" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "test_port.py",
                "line": 43,
                "start": 40,
                "end": 52
              },
              "resolves_to": [ "qualifier.star_star_arg_wrapper" ],
              "port": "formal(**kw)[arg][a]",
              "length": 3
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "qualifier.match_star_star_arg_with_star",
    "callable_line": 35,
    "code": 5002,
    "line": 40,
    "start": 31,
    "end": 37,
    "filename": "test_port.py",
    "message":
      "Test flow. Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "test_port.py",
                "line": 38,
                "start": 27,
                "end": 29
              },
              "resolves_to": [ "qualifier.source_field" ],
              "port": "result[a]",
              "length": 1
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSource" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "test_port.py",
                "line": 40,
                "start": 31,
                "end": 37
              },
              "resolves_to": [ "qualifier.star_star_arg_wrapper" ],
              "port": "formal(**kw)[arg][a]",
              "length": 3
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "qualifier.Foo.some_source",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "root": {
              "filename": "test_port.py",
              "line": 49,
              "start": 27,
              "end": 29
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSource" } ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "qualifier.refer_to_method_as_field",
    "sources": [],
    "sinks": [
      {
        "port": "formal(foo)[some_source]",
        "taint": [
          {
            "root": {
              "filename": "test_port.py",
              "line": 55,
              "start": 15,
              "end": 20
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "qualifier.refer_to_method_as_field",
    "callable_line": 52,
    "code": 5002,
    "line": 55,
    "start": 15,
    "end": 20,
    "filename": "test_port.py",
    "message":
      "Test flow. Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "test_port.py",
                "line": 54,
                "start": 12,
                "end": 27
              },
              "resolves_to": [ "qualifier.Foo.some_source" ],
              "port": "result",
              "length": 1
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSource" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "test_port.py",
              "line": 55,
              "start": 15,
              "end": 20
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "qualifier.sink_field",
    "sources": [],
    "sinks": [
      {
        "port": "formal(arg)[a]",
        "taint": [
          {
            "root": {
              "filename": "test_port.py",
              "line": 10,
              "start": 15,
              "end": 20
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "qualifier.source_field",
    "sources": [
      {
        "port": "result[a]",
        "taint": [
          {
            "root": {
              "filename": "test_port.py",
              "line": 6,
              "start": 27,
              "end": 29
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSource" } ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "qualifier.star_arg",
    "sources": [],
    "sinks": [
      {
        "port": "formal(*rest1)[1][a]",
        "taint": [
          {
            "call": {
              "position": {
                "filename": "test_port.py",
                "line": 17,
                "start": 15,
                "end": 19
              },
              "resolves_to": [ "qualifier.sink_field" ],
              "port": "formal(arg)[a]",
              "length": 1
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "qualifier.star_arg_wrapper",
    "sources": [],
    "sinks": [
      {
        "port": "formal(*rest1)[1][a]",
        "taint": [
          {
            "call": {
              "position": {
                "filename": "test_port.py",
                "line": 20,
                "start": 16,
                "end": 21
              },
              "resolves_to": [ "qualifier.star_arg" ],
              "port": "formal(*rest1)[1][a]",
              "length": 2
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "qualifier.star_star_arg",
    "sources": [],
    "sinks": [
      {
        "port": "formal(**kw)[arg][a]",
        "taint": [
          {
            "call": {
              "position": {
                "filename": "test_port.py",
                "line": 30,
                "start": 15,
                "end": 21
              },
              "resolves_to": [ "qualifier.sink_field" ],
              "port": "formal(arg)[a]",
              "length": 1
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "qualifier.star_star_arg_wrapper",
    "sources": [],
    "sinks": [
      {
        "port": "formal(**kw)[arg][a]",
        "taint": [
          {
            "call": {
              "position": {
                "filename": "test_port.py",
                "line": 33,
                "start": 21,
                "end": 29
              },
              "resolves_to": [ "qualifier.star_star_arg" ],
              "port": "formal(**kw)[arg][a]",
              "length": 2
            },
            "tito": [],
            "leaves": [ { "kind": "Test", "name": "__testSink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
